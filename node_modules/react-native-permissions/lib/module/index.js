import _regeneratorRuntime from"@babel/runtime/regenerator";import{NativeModules,PermissionsAndroid,Platform}from'react-native';var NativePermissionsAndroid=NativeModules.PermissionsAndroid;var ANDROID=Object.freeze({ACCEPT_HANDOVER:'android.permission.ACCEPT_HANDOVER',ACCESS_BACKGROUND_LOCATION:'android.permission.ACCESS_BACKGROUND_LOCATION',ACCESS_COARSE_LOCATION:'android.permission.ACCESS_COARSE_LOCATION',ACCESS_FINE_LOCATION:'android.permission.ACCESS_FINE_LOCATION',ACTIVITY_RECOGNITION:'android.permission.ACTIVITY_RECOGNITION',ADD_VOICEMAIL:'com.android.voicemail.permission.ADD_VOICEMAIL',ANSWER_PHONE_CALLS:'android.permission.ANSWER_PHONE_CALLS',BODY_SENSORS:'android.permission.BODY_SENSORS',CALL_PHONE:'android.permission.CALL_PHONE',CAMERA:'android.permission.CAMERA',GET_ACCOUNTS:'android.permission.GET_ACCOUNTS',PROCESS_OUTGOING_CALLS:'android.permission.PROCESS_OUTGOING_CALLS',READ_CALENDAR:'android.permission.READ_CALENDAR',READ_CALL_LOG:'android.permission.READ_CALL_LOG',READ_CONTACTS:'android.permission.READ_CONTACTS',READ_EXTERNAL_STORAGE:'android.permission.READ_EXTERNAL_STORAGE',READ_PHONE_NUMBERS:'android.permission.READ_PHONE_NUMBERS',READ_PHONE_STATE:'android.permission.READ_PHONE_STATE',READ_SMS:'android.permission.READ_SMS',RECEIVE_MMS:'android.permission.RECEIVE_MMS',RECEIVE_SMS:'android.permission.RECEIVE_SMS',RECEIVE_WAP_PUSH:'android.permission.RECEIVE_WAP_PUSH',RECORD_AUDIO:'android.permission.RECORD_AUDIO',SEND_SMS:'android.permission.SEND_SMS',USE_SIP:'android.permission.USE_SIP',WRITE_CALENDAR:'android.permission.WRITE_CALENDAR',WRITE_CALL_LOG:'android.permission.WRITE_CALL_LOG',WRITE_CONTACTS:'android.permission.WRITE_CONTACTS',WRITE_EXTERNAL_STORAGE:'android.permission.WRITE_EXTERNAL_STORAGE'});var IOS=Object.freeze({BLUETOOTH_PERIPHERAL:'ios.permission.BLUETOOTH_PERIPHERAL',CALENDARS:'ios.permission.CALENDARS',CAMERA:'ios.permission.CAMERA',CONTACTS:'ios.permission.CONTACTS',FACE_ID:'ios.permission.FACE_ID',LOCATION_ALWAYS:'ios.permission.LOCATION_ALWAYS',LOCATION_WHEN_IN_USE:'ios.permission.LOCATION_WHEN_IN_USE',MEDIA_LIBRARY:'ios.permission.MEDIA_LIBRARY',MICROPHONE:'ios.permission.MICROPHONE',MOTION:'ios.permission.MOTION',PHOTO_LIBRARY:'ios.permission.PHOTO_LIBRARY',REMINDERS:'ios.permission.REMINDERS',SIRI:'ios.permission.SIRI',SPEECH_RECOGNITION:'ios.permission.SPEECH_RECOGNITION',STOREKIT:'ios.permission.STOREKIT'});export var PERMISSIONS=Object.freeze({ANDROID:ANDROID,IOS:IOS});export var RESULTS=Object.freeze({UNAVAILABLE:'unavailable',DENIED:'denied',BLOCKED:'blocked',GRANTED:'granted'});var RNPermissions=NativeModules.RNPermissions;if(RNPermissions==null){throw new Error("react-native-permissions: NativeModule.RNPermissions is null. To fix this issue try these steps:\n\u2022 Run `react-native link react-native-permissions` in the project root.\n\u2022 Rebuild and re-run the app.\n\u2022 If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\n\u2022 Check that the library was linked correctly when you used the link command by running through the manual installation instructions in the README.\n* If you are getting this error while unit testing you need to mock the native module. Follow the guide in the README.\nIf none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-community/react-native-permissions");}var platformPermissions=Platform.select({ios:Object.values(IOS),android:Object.values(ANDROID),default:[]});function isPlatformPermission(permission){if(platformPermissions.includes(permission)){return true;}if(__DEV__){var message='';message+="Invalid "+Platform.OS+" permission \""+permission+"\".";message+=' Must be one of:\n\n• ';message+=platformPermissions.join('\n• ');console.error(message);}return false;}export function openSettings(){return RNPermissions.openSettings().then(function(){});}export function check(permission){var available,nonRequestables;return _regeneratorRuntime.async(function check$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isPlatformPermission(permission)){_context.next=2;break;}return _context.abrupt("return",RESULTS.UNAVAILABLE);case 2:if(!(Platform.OS==='ios')){_context.next=4;break;}return _context.abrupt("return",RNPermissions.check(permission));case 4:_context.next=6;return _regeneratorRuntime.awrap(RNPermissions.isAvailable(permission));case 6:available=_context.sent;if(available){_context.next=9;break;}return _context.abrupt("return",RESULTS.UNAVAILABLE);case 9:_context.next=11;return _regeneratorRuntime.awrap(PermissionsAndroid.check(permission));case 11:if(!_context.sent){_context.next=13;break;}return _context.abrupt("return",RESULTS.GRANTED);case 13:_context.next=15;return _regeneratorRuntime.awrap(RNPermissions.getNonRequestables());case 15:nonRequestables=_context.sent;if(nonRequestables.includes(permission)){_context.next=18;break;}return _context.abrupt("return",RESULTS.DENIED);case 18:_context.next=20;return _regeneratorRuntime.awrap(NativePermissionsAndroid.shouldShowRequestPermissionRationale(permission));case 20:if(!_context.sent){_context.next=24;break;}_context.t0=RESULTS.DENIED;_context.next=25;break;case 24:_context.t0=RESULTS.BLOCKED;case 25:return _context.abrupt("return",_context.t0);case 26:case"end":return _context.stop();}}});}export function request(permission,rationale){var available,status;return _regeneratorRuntime.async(function request$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(isPlatformPermission(permission)){_context2.next=2;break;}return _context2.abrupt("return",RESULTS.UNAVAILABLE);case 2:if(!(Platform.OS==='ios')){_context2.next=4;break;}return _context2.abrupt("return",RNPermissions.request(permission));case 4:_context2.next=6;return _regeneratorRuntime.awrap(RNPermissions.isAvailable(permission));case 6:available=_context2.sent;if(available){_context2.next=9;break;}return _context2.abrupt("return",RESULTS.UNAVAILABLE);case 9:_context2.next=11;return _regeneratorRuntime.awrap(PermissionsAndroid.request(permission,rationale));case 11:status=_context2.sent;if(!(status==='granted')){_context2.next=14;break;}return _context2.abrupt("return",RESULTS.GRANTED);case 14:if(!(status==='denied')){_context2.next=16;break;}return _context2.abrupt("return",RESULTS.DENIED);case 16:if(!(status==='never_ask_again')){_context2.next=20;break;}_context2.next=19;return _regeneratorRuntime.awrap(RNPermissions.setNonRequestable(permission));case 19:return _context2.abrupt("return",RESULTS.BLOCKED);case 20:return _context2.abrupt("return",RESULTS.UNAVAILABLE);case 21:case"end":return _context2.stop();}}});}export function checkNotifications(){return RNPermissions.checkNotifications();}export function requestNotifications(options){return RNPermissions.requestNotifications(options);}export default{PERMISSIONS:PERMISSIONS,RESULTS:RESULTS,openSettings:openSettings,check:check,request:request,checkNotifications:checkNotifications,requestNotifications:requestNotifications};
//# sourceMappingURL=index.js.map